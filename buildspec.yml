version: 0.2

phases:
  pre_build:
    commands:
      - echo Entered the pre build phase...
      - mvn clean package
      - echo Logging in to Amazon ECR...
      - AWS_DEFAULT_REGION=ap-southeast-1
      - AWS_ACCOUNT_ID=872583825157
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/demo-alvian
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=1.0.${CODEBUILD_BUILD_NUMBER:latest}
  build:
    commands:
      - echo Entered the build phase...
  post_build:
    commands:
      - echo Entered the post build phase...
      - echo Pushing the Docker images...
      - DOCKER_TOKEN=$(aws ecr get-login-password --region ap-southeast-1)
      - mvn spring-boot:build-image -DskipTests
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"order-service","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
      - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::872583825157:role/AdminCLI --role-session-name codebuild-kubectl --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - aws eks update-kubeconfig --name bc-mgmt --region ap-southeast-1
      - kubectl apply -f simple-app-deployment.yaml
artifacts:
  files:
    - imagedefinitions.json
    - target/order-service.jar
cache:
  paths:
    - '/root/.m2/**/*'